{"version":3,"sources":["ask_question.js","question_row.js","answer_box.js","App.js","index.js"],"names":["AskQuestion","app_url","handleCancel","handleSuccess","useState","questionTitle","setquestionTitle","questionContent","setquestionContent","submitQuestion","a","trim","alert","fetch","method","headers","body","JSON","stringify","title","response","status","json","res","data","className","aria-labelledby","role","aria-modal","aria-hidden","value","type","onChange","e","target","placeholder","cols","rows","onClick","QuestionRow","answers","handleAnswerClick","fetchAnswers","canShowAnswers","setcanShowAnswers","newly_added","viewed","Date","created_at","toLocaleDateString","_id","map","answer","content","AnswerBox","question","setContent","stopWords","length","stopWordFound","split","find","word","includes","console","log","App","currentTabIndex","setcurrentTabIndex","canShowAskQuestion","setcanShowAskQuestion","canShowAnswerBox","setcanShowAnswerBox","questions","setQuestions","setAnswers","questionToAnswer","setquestionToAnswer","socket","io","useEffect","fetchQuestions","connectToSocketIo","connect","emit","on","allQuestions","q","allAnswers","top","answersExcept","filter","x","getTabClasses","tabId","this_answers","ans","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9e0bad7.chunk.js","sourcesContent":["import {useState} from 'react'\n\nconst AskQuestion = ({app_url,handleCancel,handleSuccess}) => {\n    const [questionTitle, setquestionTitle] = useState()\n    const [questionContent, setquestionContent] = useState()\n\n    const submitQuestion = async() => {\n        // console.log(questionTitle)\n        // console.log(questionContent)\n        \n\t\tif (!questionTitle || !questionTitle.trim()){\n\t\t\talert('Question tile cant be empty');\n\t\t\treturn;\n\t\t}\n\n        if (!questionContent || !questionContent.trim()){\n\t\t\talert('Question body cant be empty');\n\t\t\treturn;\n\t\t}\n\n        // if (questionTitle.trim().length > 10){\n        //     alert('Question title cant be that small, please have atleast 10 characters');\n\t\t// \treturn;\n        // }\n\n        // if (questionContent.trim().length > 10){\n        //     alert('Question body cant be that small, please have atleast 10 characters');\n\t\t// \treturn;\n        // }\n\n\t\tconst response = await fetch(`${app_url}/questions`,{\n\t\t\tmethod:'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody:JSON.stringify({\n\t\t\t\ttitle: questionTitle,\n                body:questionContent\n\t\t\t})\n\t\t})\n\n\t\tif (response.status === 200){\n\t\t\tconst res = await response.json();\n            handleSuccess(res.data)\n\t\t}else{\n\t\t\talert('Problem saving question')\n\t\t}\n\n    }\n    return <div className=\"fixed z-10 inset-0 overflow-y-auto\" aria-labelledby=\"modal-title\" role=\"dialog\" aria-modal=\"true\">\n        <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n        <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" aria-hidden=\"true\"></div>\n    \n        <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\n    \n        <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\n            <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n                <div className=\"flex\">\n                    <h3 className=\"text-2xl\">Have a question? Ask away!</h3>\n                \n                </div>\n                <div className=\"pt-2 flex-col\">\n                    <div>\n                        <small>Question title</small>\n                    </div>      \n                    <input value={questionTitle} type=\"text\" className=\"w-full pl-5 pr-5 pt-5 border border-purple-400 focus:border-purple-800 focus-within:border-purple-800 focus:ring-purple-700\" onChange={(e) => setquestionTitle(e.target.value)} placeholder=\"Question title\" />\n\n                    <div className=\"mt-5\">\n                        <small>Any more details?</small>\n                    </div>    \n                    <textarea value={questionContent}  cols=\"30\" rows=\"10\" className=\"w-full pl-5 pr-5 pt-5 border border-purple-400 focus:border-purple-800 focus-within:border-purple-800 focus:ring-purple-700\" onChange={(e) => setquestionContent(e.target.value)}></textarea>\n\n                </div>\n            </div>\n            <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n                <button type=\"button\" className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-purple-600 text-base font-medium text-white hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 sm:ml-3 sm:w-auto sm:text-sm\" onClick={submitQuestion}>\n                    Ask\n                </button>\n            <button type=\"button\" className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\" onClick={handleCancel}>\n                Cancel\n            </button>\n            </div>\n        </div>\n        </div>\n  </div>\n}\n\nexport default AskQuestion;\n","import {useState} from 'react'\nconst QuestionRow = ({data,answers,handleAnswerClick, fetchAnswers}) => {\n    const [canShowAnswers, setcanShowAnswers] = useState(false)\n\n\n    return <div className={`flex ${data.newly_added ? 'bg-yellow-100' : ''}`}>\n                 <div className=\"m-1 mr-2 relative flex justify-center items-center  bg-purple-200 text-purple-700 flex-none used\">\n                    {data.viewed}\n                 </div>\n                <div className=\"flex-col p-3 flex-auto\">\n                    <div className=\"header flex\">\n                        <h4 className=\"text-xl font-semibold\">{data.title}</h4>\n                        <small className=\"text-xs pt-2 ml-5\">(Created At: {new Date(data.created_at).toLocaleDateString('en-US')})</small>\n                    </div>\n                    \n                    <div className=\"text-sm\">\n                       {data.body}\n                    </div>\n                    \n                    <div className=\"flex \">\n                        <button className=\" text-green-600  font-semibold text-sm\" onClick={async ()=>{\n                            if (!canShowAnswers){\n                                await fetchAnswers(data._id)\n                                setcanShowAnswers(true)\n                            }else{\n                                setcanShowAnswers(false)\n                            }\n                            \n                        }}>{!canShowAnswers ? 'Show answers' : 'Hide answers'}</button>\n                    </div>\n                   \n                   {\n                       canShowAnswers\n                        ? <div className=\"answers\">\n                        {\n                            answers.map(answer => {\n                                return <div className={`p-5 ${answer.newly_added ? 'bg-yellow-100' : ''}`} key={answer._id}>\n                                    {answer.content}\n                                </div>\n                            })\n                        }\n                         </div>\n                        : null\n\n                   }\n                </div>\n                <div className=\"flex-row-reverse p-5\">\n                    <button className=\"bg-green-100 text-green-600  p-2 font-semibold text-sm\" onClick={() => handleAnswerClick(data)}>Answer it</button>\n                </div>\n            </div>\n}\n\nexport default QuestionRow","import {useState} from 'react'\n\nconst AnswerBox = ({app_url,handleCancel,handleSuccess,question}) => {\n    const [content, setContent] = useState()\n    const stopWords = [ \"yes\" ,\"I don't know\", \"no\", \"that's fine\"]\n\n    const submitQuestion = async() => {\n        \n\t\tif (!content || !content.trim()){\n\t\t\talert('Answer cant be empty');\n\t\t\treturn;\n\t\t}\n\n        if (content.trim().length < 10){\n\t\t\talert('Answer cant be less than 10 characters');\n\t\t\treturn;\n\t\t}\n\n\n        var stopWordFound = content.split(' ').find(word => {\n            return stopWords.includes(word)\n        })\n\n        if (!stopWordFound){\n            stopWordFound = content.split(',').find(word => {\n                return stopWords.includes(word)\n            })\n        }\n\n        if (stopWordFound){\n            console.log(\"You cant use these stop words in your answer [yes ,I don't know, no, that's fine]\")\n            return\n        }\n        \n\n\t\tconst response = await fetch(`${app_url}/questions/${question._id}/answers/`,{\n\t\t\tmethod:'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody:JSON.stringify({\n\t\t\t\tcontent: content,\n\t\t\t})\n\t\t})\n\n\t\tif (response.status === 200){\n\t\t\tconst res = await response.json();\n            handleSuccess(res.data)\n\t\t}else{\n\t\t\talert('Problem submitting answers')\n\t\t}\n\n    }\n    return <div className=\"fixed z-10 inset-0 overflow-y-auto\" aria-labelledby=\"modal-title\" role=\"dialog\" aria-modal=\"true\">\n        <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n        <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" aria-hidden=\"true\"></div>\n    \n        <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\n    \n        <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\n            <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n                <div className=\"flex\">\n                    <h3 className=\"text-2xl\">{question.title}</h3>\n                \n                </div>\n                <div className=\"pt-2 flex-col\">\n                    <div className=\"mt-5\">\n                        <small>Add your answer here</small>\n                    </div>    \n                    <textarea value={content}  cols=\"30\" rows=\"10\" className=\"w-full pl-5 pr-5 pt-5 border border-purple-400 focus:border-purple-800 focus-within:border-purple-800 focus:ring-purple-700\" onChange={(e) => setContent(e.target.value)} placeholder=\"Your answer\"></textarea>\n\n                </div>\n            </div>\n            <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n                <button type=\"button\" className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-purple-600 text-base font-medium text-white hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 sm:ml-3 sm:w-auto sm:text-sm\" onClick={submitQuestion}>\n                    Submit\n                </button>\n            <button type=\"button\" className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\" onClick={handleCancel}>\n                Cancel\n            </button>\n            </div>\n        </div>\n        </div>\n  </div>\n}\n\nexport default AnswerBox;\n","import './App.css';\nimport {useState,useEffect} from 'react'\nimport AskQuestion from './ask_question'; \nimport QuestionRow from './question_row'; \nimport AnswerBox from './answer_box'; \nimport io from 'socket.io-client'\n\nfunction App() {\n\t// var app_url = 'http://localhost:3000'\n\tvar app_url = 'https://qa-pickfu.herokuapp.com'\n\tconst [currentTabIndex, setcurrentTabIndex] = useState(0)\n\tconst [canShowAskQuestion, setcanShowAskQuestion] = useState(false)\n\tconst [canShowAnswerBox, setcanShowAnswerBox] = useState(false)\n\tconst [questions, setQuestions] = useState([])\n\tconst [answers, setAnswers] = useState([])\n\tconst [questionToAnswer, setquestionToAnswer] = useState()\n\tlet socket = io(app_url)\n\n\tuseEffect(() => {\n\t\tfetchQuestions()\n\t\tconnectToSocketIo()\n\t}, [])\n\n\tconst connectToSocketIo = () =>{\n\t\tsocket.connect()\n\t\tsocket.emit('subscribe','new_questions');\n\t\tsocket.emit('subscribe','new_answers');\n\t\t\n\t\tsocket.on('new_questions', (data) => {\n\t\t\tconsole.log(data)\n\n\t\t\tdata.newly_added = true\n\t\t\tsetQuestions(allQuestions =>{\n\t\t\t\tif (!allQuestions.find(q => q._id === data._id)){\n\t\t\t\t\treturn [data,...allQuestions]\n\t\t\t\t}\n\t\t\t\treturn allQuestions\n\t\t\t} );\n\t\t})\n\t\tsocket.on('new_answers', (data) => {\n\t\t\tconsole.log(data)\n\t\t\tif (!answers.find(q => q._id === data._id)){\n\t\t\t\tdata.newly_added = true\n\t\t\t\tsetAnswers(allAnswers => {\n\t\t\t\t\tif (!allAnswers.find(q => q._id === data._id)){\n\t\t\t\t\t\treturn [data,...allAnswers]\n\t\t\t\t\t}\n\t\t\t\t\treturn allAnswers\n\t\t\t\t\t\n\t\t\t\t});\n\t\t\t}\n\t\t})\n\t}\n\n\n\n\n\tconst  fetchQuestions = async(top) => {\n\t\tconst response = await fetch(!top ? `${app_url}/questions/all` : `${app_url}/questions/top`)\n\t\tif (response.status === 200){\n\t\t\tconst res = await response.json();\n\t\t\tconsole.log(res.data)\n\t\t\tsetQuestions(res.data)\n\t\t}\n\t}\n\n    const fetchAnswers = async (question) => {\n        const response = await fetch(`${app_url}/questions/${question}/answers`)\n\t\tif (response.status === 200){\n\t\t\tconst res = await response.json();\n\t\t\tconst answersExcept  = answers.filter(x=>x.question !== question)\n\t\t\tsetAnswers([...res.data,...answersExcept]);\n\t\t}\n    }\n\n\tconst getTabClasses = (tabId) => {\n\t\treturn `block relative px-4 py-1 leading-6 sm:text-md font-semibold focus:outline-none transition-colors duration-300 bg-white  mr-5 ${currentTabIndex === tabId ? 'text-gray-900' : ' text-gray-400'}`\n\t}\n\n\tconst handleQuestionSave = (data) => {\n\t\tsetcanShowAskQuestion(false)\n\t\tdata.newly_added = true\n\t\tsetQuestions([data,...questions]);\n\t}\n\n\tconst handleAnswerSave = (data) => {\n\t\tsetcanShowAnswerBox(false)\n\t\tsetquestionToAnswer(null)\n\t\tdata.newly_added = true\n\t\tsetAnswers([data,...answers]);\n\t}\n  return (\n\t\t<div className=\"mx-auto bg-gray-50 container\">\n\t\t\t\t<h1 className=\"text-7xl text-center font-bold pt-3 pb-3\"> Simple QA</h1>\n\n\t\t<div className=\"flex mt-5 p-5\">\n\t\t\t<div className=\"flex flex-auto\">\n\t\t\t\t<button type=\"button\" className={getTabClasses(0)} onClick={()=>{\n\t\t\t\tsetcurrentTabIndex(0)\n\t\t\t\tfetchQuestions()\n\t\t\t\t}}>All Questions</button>\n\t\t\t\t<button type=\"button\" className={getTabClasses(1)} onClick={()=>{\n\t\t\t\tsetcurrentTabIndex(1)\n\t\t\t\tfetchQuestions('top')\n\t\t\t\t}}>Latest 100 Questions </button>\n\t\t\t</div>\n\t\t\t<button type=\"button\" className='flex-none px-4 py-1 leading-6 sm:text-md font-semibold focus:outline-none bg-purple-200 text-purple-700' onClick={()=>{\n\t\t\t\t\t\tsetcanShowAskQuestion(true)\n\t\t\t\t\t\t// fetchQuestions('top')\n\t\t\t}}> Ask Question </button>\n\t\t</div>\n\n\t\t<div className=\"flex-col\">\n\t\t{\n\t\t\tquestions.map(question => {\n\t\t\t\tconst this_answers  = answers.filter(ans => ans.question === question._id)\n\t\t\t\treturn <QuestionRow data={question} key={question._id} answers={this_answers} handleAnswerClick={(question) => {\n\t\t\t\t\tsetquestionToAnswer(question)\n\t\t\t\t\tsetcanShowAnswerBox(true)\n\t\t\t\t}} fetchAnswers={fetchAnswers}></QuestionRow>\n\t\t\t})\n\t\t}\t\t\t\n\t\t</div>\n\t\t{\n\t\t\tcanShowAskQuestion\n\t\t\t? <AskQuestion handleCancel={() => setcanShowAskQuestion(false)} app_url={app_url} handleSuccess={handleQuestionSave}></AskQuestion>\n\t\t\t: null\n\t\t}\n\t\t{\n\t\t\tcanShowAnswerBox\n\t\t\t? <AnswerBox handleCancel={() => setcanShowAnswerBox(false)} app_url={app_url} handleSuccess={handleAnswerSave} question={questionToAnswer}></AnswerBox>\n\t\t\t: null\n\t\t}\n\t\t</div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}